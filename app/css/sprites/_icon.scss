/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$icon-3d-effects-name: 'icon-3d_effects';
$icon-3d-effects-x: 0px;
$icon-3d-effects-y: 0px;
$icon-3d-effects-offset-x: 0px;
$icon-3d-effects-offset-y: 0px;
$icon-3d-effects-width: 64px;
$icon-3d-effects-height: 64px;
$icon-3d-effects-total-width: 192px;
$icon-3d-effects-total-height: 192px;
$icon-3d-effects-image: '../img/icon-sprite.png';
$icon-3d-effects: (0px, 0px, 0px, 0px, 64px, 64px, 192px, 192px, '../img/icon-sprite.png', 'icon-3d_effects', );
$icon-connectivity-name: 'icon-connectivity';
$icon-connectivity-x: 64px;
$icon-connectivity-y: 0px;
$icon-connectivity-offset-x: -64px;
$icon-connectivity-offset-y: 0px;
$icon-connectivity-width: 64px;
$icon-connectivity-height: 64px;
$icon-connectivity-total-width: 192px;
$icon-connectivity-total-height: 192px;
$icon-connectivity-image: '../img/icon-sprite.png';
$icon-connectivity: (64px, 0px, -64px, 0px, 64px, 64px, 192px, 192px, '../img/icon-sprite.png', 'icon-connectivity', );
$icon-device-access-name: 'icon-device_access';
$icon-device-access-x: 0px;
$icon-device-access-y: 64px;
$icon-device-access-offset-x: 0px;
$icon-device-access-offset-y: -64px;
$icon-device-access-width: 64px;
$icon-device-access-height: 64px;
$icon-device-access-total-width: 192px;
$icon-device-access-total-height: 192px;
$icon-device-access-image: '../img/icon-sprite.png';
$icon-device-access: (0px, 64px, 0px, -64px, 64px, 64px, 192px, 192px, '../img/icon-sprite.png', 'icon-device_access', );
$icon-multimedia-name: 'icon-multimedia';
$icon-multimedia-x: 64px;
$icon-multimedia-y: 64px;
$icon-multimedia-offset-x: -64px;
$icon-multimedia-offset-y: -64px;
$icon-multimedia-width: 64px;
$icon-multimedia-height: 64px;
$icon-multimedia-total-width: 192px;
$icon-multimedia-total-height: 192px;
$icon-multimedia-image: '../img/icon-sprite.png';
$icon-multimedia: (64px, 64px, -64px, -64px, 64px, 64px, 192px, 192px, '../img/icon-sprite.png', 'icon-multimedia', );
$icon-offline-storage-name: 'icon-offline_storage';
$icon-offline-storage-x: 128px;
$icon-offline-storage-y: 0px;
$icon-offline-storage-offset-x: -128px;
$icon-offline-storage-offset-y: 0px;
$icon-offline-storage-width: 64px;
$icon-offline-storage-height: 64px;
$icon-offline-storage-total-width: 192px;
$icon-offline-storage-total-height: 192px;
$icon-offline-storage-image: '../img/icon-sprite.png';
$icon-offline-storage: (128px, 0px, -128px, 0px, 64px, 64px, 192px, 192px, '../img/icon-sprite.png', 'icon-offline_storage', );
$icon-performance-name: 'icon-performance';
$icon-performance-x: 128px;
$icon-performance-y: 64px;
$icon-performance-offset-x: -128px;
$icon-performance-offset-y: -64px;
$icon-performance-width: 64px;
$icon-performance-height: 64px;
$icon-performance-total-width: 192px;
$icon-performance-total-height: 192px;
$icon-performance-image: '../img/icon-sprite.png';
$icon-performance: (128px, 64px, -128px, -64px, 64px, 64px, 192px, 192px, '../img/icon-sprite.png', 'icon-performance', );
$icon-semantics-name: 'icon-semantics';
$icon-semantics-x: 0px;
$icon-semantics-y: 128px;
$icon-semantics-offset-x: 0px;
$icon-semantics-offset-y: -128px;
$icon-semantics-width: 64px;
$icon-semantics-height: 64px;
$icon-semantics-total-width: 192px;
$icon-semantics-total-height: 192px;
$icon-semantics-image: '../img/icon-sprite.png';
$icon-semantics: (0px, 128px, 0px, -128px, 64px, 64px, 192px, 192px, '../img/icon-sprite.png', 'icon-semantics', );
$icon-styling-name: 'icon-styling';
$icon-styling-x: 64px;
$icon-styling-y: 128px;
$icon-styling-offset-x: -64px;
$icon-styling-offset-y: -128px;
$icon-styling-width: 64px;
$icon-styling-height: 64px;
$icon-styling-total-width: 192px;
$icon-styling-total-height: 192px;
$icon-styling-image: '../img/icon-sprite.png';
$icon-styling: (64px, 128px, -64px, -128px, 64px, 64px, 192px, 192px, '../img/icon-sprite.png', 'icon-styling', );
$icon-spritesheet-width: 192px;
$icon-spritesheet-height: 192px;
$icon-spritesheet-image: '../img/icon-sprite.png';
$icon-spritesheet-sprites: ($icon-3d-effects, $icon-connectivity, $icon-device-access, $icon-multimedia, $icon-offline-storage, $icon-performance, $icon-semantics, $icon-styling, );
$icon-spritesheet: (192px, 192px, '../img/icon-sprite.png', $icon-spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
